 Install Required Dependencies

sudo apt update
sudo apt install -y build-essential cmake git pkg-config libjpeg-dev libtiff-dev libpng-dev \
    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev \
    libgtk-3-dev libatlas-base-dev gfortran python3-dev python3-numpy gstreamer1.0-tools \
    gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly


clone

mkdir ~/opencv_build && cd ~/opencv_build
git clone https://github.com/opencv/opencv.git
git clone https://github.com/opencv/opencv_contrib.git


support 

cd ~/opencv_build/opencv
mkdir build && cd build


cmake -D CMAKE_BUILD_TYPE=Release \
      -D CMAKE_INSTALL_PREFIX=/usr/local \
      -D OPENCV_EXTRA_MODULES_PATH=~/opencv_build/opencv_contrib/modules \
      -D WITH_GSTREAMER=ON \
      -D WITH_V4L=ON \
      -D BUILD_opencv_python3=ON \
      -D PYTHON3_EXECUTABLE=$(which python3) ..


make -j$(nproc)

sudo make install
sudo ldconfig

import cv2
print(cv2.getBuildInformation())


import cv2

pipeline = "libcamerasrc ! video/x-raw,format=BGR,width=640,height=480 ! videoconvert ! appsink"
cap = cv2.VideoCapture(pipeline, cv2.CAP_GSTREAMER)

if not cap.isOpened():
    print("Error: Unable to open camera.")
    exit()

while True:
    ret, frame = cap.read()
    if not ret:
        print("Failed to grab frame.")
        break
    cv2.imshow("Camera Frame", frame)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
----

sudo apt update
sudo apt install -y python3-picamera2


----

from picamera2 import Picamera2

# Initialize the camera
picam2 = Picamera2()

# Configure the camera
preview_config = picam2.create_preview_configuration()
picam2.configure(preview_config)

# Start the camera
picam2.start()
print("Camera started. Press Ctrl+C to stop.")

# Keep the camera running
try:
    while True:
        pass
except KeyboardInterrupt:
    print("Stopping camera...")
    picam2.stop()

------


from picamera2 import Picamera2

picam2 = Picamera2()
config = picam2.create_still_configuration()
picam2.configure(config)

picam2.start()
picam2.capture_file("test.jpg")
print("Image saved as test.jpg")
picam2.stop()

-------


import cv2
from picamera2 import Picamera2

# Initialize Picamera2
picam2 = Picamera2()
preview_config = picam2.create_preview_configuration(main={"size": (640, 480)})
picam2.configure(preview_config)

# Start the camera
picam2.start()

while True:
    # Capture frames
    frame = picam2.capture_array()
    cv2.imshow("Camera Frame", frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

picam2.stop()
cv2.destroyAllWindows()


-------

